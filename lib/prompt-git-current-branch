#!/bin/bash

# Prints the current git branch for use in a bash prompt.
# Example output:
#   - " (main)"
#   - " ((no branch, rebasing main))"
#   - " ((HEAD detached at 8b78a71))"
#   - "" (e.g., when not in a git directory)

set -o errexit
set -o nounset
set -o noclobber
set -o pipefail

# The "git branch" command seems to be the most versatile way to get the current
# branch (e.g., it works in a "detached HEAD" state). However, it does not work
# in a new repository with no commits, so fallback to
# "git branch --show-current" if "git branch" returns "".
# See https://stackoverflow.com/a/19585361
branch="$(git branch --no-color 2>/dev/null | sed -n -e '/^\* /s|||p' || :)"
if [[ -z "${branch}" ]]; then
  branch="$(git branch --no-color --show-current 2>/dev/null || :)"
fi
if [[ -n "${branch}" ]]; then
  echo " (${branch})"
fi
